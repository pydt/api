{
  "name": "serverless-api",
  "version": "1.0.0",
  "description": "",
  "dependencies": {
    "aws-xray-sdk": "3.1.0",
    "bcryptjs": "2.4.3",
    "civ6-save-parser": "1.1.14",
    "dynamoose": "1.11.1",
    "express": "4.17.1",
    "generate-password": "1.5.1",
    "inversify": "5.0.1",
    "inversify-binding-decorators": "4.0.0",
    "is-url": "1.2.4",
    "jsonwebtoken": "8.5.1",
    "lodash": "4.17.15",
    "moment": "2.25.3",
    "passport": "0.4.1",
    "passport-steam": "1.0.14",
    "pydt-civ5-save-parser": "1.0.8",
    "pydt-shared-models": "1.5.0",
    "reflect-metadata": "0.1.13",
    "request": "2.88.2",
    "request-promise": "4.2.5",
    "rollbar": "2.15.2",
    "rxjs": "6.5.5",
    "source-map-support": "0.5.19",
    "tsoa": "3.0.8",
    "uuid": "3.3.3",
    "web-push": "^3.4.4"
  },
  "devDependencies": {
    "@types/chai": "^4.1.6",
    "@types/express": "^4.17.2",
    "@types/hapi": "18.0.3",
    "@types/lodash": "^4.14.116",
    "@types/node": "^13.13.5",
    "@types/request-promise": "^4.1.42",
    "@types/web-push": "^3.3.0",
    "@types/webpack-env": "^1.13.6",
    "@typescript-eslint/eslint-plugin": "^3.5.0",
    "@typescript-eslint/parser": "^3.5.0",
    "aws-sdk": "^2.683.0",
    "chai": "^4.2.0",
    "co": "^4.6.0",
    "eslint": "^7.2.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.3",
    "export-api-url": "file:local_modules/export-api-url",
    "git-revision-webpack-plugin": "^3.0.3",
    "html-loader": "^0.5.5",
    "mocha": "^6.2.2",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.0",
    "serverless-domain-manager": "^4.0.0",
    "serverless-offline": "^6.1.5",
    "serverless-prune-plugin": "^1.4.3",
    "serverless-webpack": "^5.2.0",
    "ts-loader": "6.2.1",
    "ts-node": "^8.4.1",
    "typemoq": "^2.1.0",
    "typescript": "^3.8.3",
    "webpack": "^4.19.0",
    "webpack-node-externals": "^1.7.2"
  },
  "scripts": {
    "test": "mocha -r ts-node/register {api,functions,lib}/**/*.spec.ts",
    "integration-test": "bash -c \"RESOURCE_PREFIX=civx-integration- mocha -r ts-node/register {api,functions,lib}/**/*.int-spec.ts --timeout 20000\"",
    "clean": "rimraf api/_gen .webpack",
    "swagger-gen": "tsoa spec",
    "routes-gen": "bash -c 'mkdir -p api/_gen/routes' && tsoa routes",
    "lint": "eslint {api,functions,lib}/**/*.ts",
    "lint-fix": "eslint {api,functions,lib}/**/*.ts --fix",
    "build": "npm run clean && npm run routes-gen && npm run lint && npm run swagger-gen",
    "start": "npm run build && bash -c \"RUNNING_LOCAL=true sls offline -c -o 0.0.0.0\"",
    "debug": "npm run build && bash -c \"RUNNING_LOCAL=true ./debug-sls.sh offline -c -o 0.0.0.0\"",
    "clean-lambda": "bash -c \"AWS_REGION=us-east-1 node -e \\\"require('./_scripts/cleanLambda').clean();\\\"",
    "deploy-dev": "npm run build && tsoa spec --host api-dev.playyourdamnturn.com && bash -c \"sls deploy -v\"",
    "deploy-prod": "npm run build && tsoa spec --host api.playyourdamnturn.com && bash -c \"WEB_URL=https://www.playyourdamnturn.com sls deploy -v --stage prod\"",
    "backup-prod": "python _scripts/dynamodump/dynamodump.py -m backup -s prod* -r us-east-1",
    "copy-backup-to-dev": "python _scripts/dynamodump/dynamodump.py -m restore -s prod* -d dev* -r us-east-1 --dataOnly && bash _scripts/reset-dev-emails.sh",
    "copy-prod-to-dev": "npm run backup-prod && npm run copy-backup-to-dev",
    "encrypt-config": "openssl des3 -pbkdf2 -salt -in config.yml -out config.yml.encrypted",
    "decrypt-config": "openssl des3 -d -pbkdf2 -salt -in config.yml.encrypted -out config.yml"
  }
}
